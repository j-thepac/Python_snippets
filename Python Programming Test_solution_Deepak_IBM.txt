
# PROBLEM DEFINITION
# ------------------
# Reverse each word in the input string.
# The order of the words will be unchanged.
# A word is made up of letters and/or numbers.
# Other characters (spaces, punctuation) will not be reversed.

# NOTES
# ------
# Write production quality code
# We prefer clarity over performance (though if you can achieve both - great!) # You can use the language that best highlights your programming ability
#    the template below is Python â€“ but you can write in Java/C++/C#/Haskell/etc if you feel you solve the problem better in that language.
# A working solution is preferred (assert in main() should succeed) #
# Bonus points for more tests


import re


def word_reverse(word):
    """To reverse a word without changing order of special characters

    :param word: Should be of string type
    :return: Reversed  word , Other characters (special characters) will not be reversed
    """
    # remove special characters and return the input word reversed
    reverse_chr = list(re.sub(r'[^0-9a-zA-Z]', '', word))[::-1]

    # Store the original position along with special character in the form of dictionary
    special_dict = {i: j for i ,j in enumerate(list(word)) if (re.search('[^0-9a-zA-Z]' ,j))}

    # Insert the special character into the original postion of the reversed characters
    for i, j in special_dict.items():
        reverse_chr.insert(i, j)

    return(''.join(reverse_chr))


def reverse_each_word(sentence):
    """

    :param sentence: String type words
    :return: String type  , The reverse of sentence keeping special characters intact
    """
    list_reversed_words =list(map(lambda word: word_reverse(word), sentence.split(" ")))
    return " ".join(list_reversed_words)


def main():
    tests = {"String;   2be reversed...": "gnirtS;   eb2 desrever...",
             "H@$Ke11 @br@c@d@br@": "1@$1eKH @rb@d@c@rb@",
             "!@#$%^&*()123456789": "!@#$%^&*()987654321",
             "!@#$%^&*() 1 2 3 4 6 7 8 9": "!@#$%^&*() 1 2 3 4 6 7 8 9"}

    for question, solution in tests.items():
        assert reverse_each_word(question) == solution

    return 0


if(__name__) == "__main__":
    main()
